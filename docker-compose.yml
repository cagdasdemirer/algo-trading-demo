version: '3.8'
services:
  app:
    build: .
    environment:
      # App-related environment variables
      APP_LOG_LEVEL: INFO
      APP_PORT: 8000
      APP_HOST: 0.0.0.0
      APP_NAME: algo-trading
      APP_VERSION: 1.0.0

      # MongoDB-related environment variables
      DB_HOST: mongodb
      DB_PORT: 27017
      DB_NAME: test
      DB_USERNAME: root
      DB_PASSWORD: password

      # Redis-related environment variables
      CACHE_HOST: redis
      CACHE_PORT: 6379
      CACHE_DB: 0

      # Kafka-related environment variables
      KAFKA_BOOTSTRAP_SERVERS: kafka:19092

      # Binance-related environment variables
      BINANCE_API_KEY:
      BINANCE_SECRET_KEY:
      BINANCE_WEBSOCKET_STREAM: wss://stream.testnet.binance.vision:9443/ws/

      # Contact-related environment variables
      ADMIN_EMAIL: mcdemirer@gmail.com
      ADMIN_NAME: Çağdaş Demirer

    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - mongodb
      - redis
      - kafka
    restart: on-failure

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    ports:
      - "27017:27017"
    restart: on-failure

  redis:
    image: redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    ports:
      - "6379:6379"
    restart: on-failure

  zoo:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
        - "9092:9092"
        - "29092:29092"
        - "9999:9999"
    environment:
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
        KAFKA_BROKER_ID: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_JMX_PORT: 9999
        KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
        KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
        - zoo
